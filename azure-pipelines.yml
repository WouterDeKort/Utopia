variables:
  buildConfiguration: 'Release'  

steps:
- task: DotNetCoreInstaller@0
  displayName: 'Use .NET Core sdk 2.1.500'
  inputs:
    version: 2.1.500

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/*.csproj'

- powershell: |
   $installedTools = dotnet tool list --global
   if ( ![bool]($installedTools -match "dotnet-sonarscanner"))
   {
        dotnet tool install --global dotnet-sonarscanner 
   }
   else
   {
        Write-Host "SonarScanner already installed. Skipping installation."
   }
  displayName: 'Install Sonar Scanner'

- script: dotnet sonarscanner begin /k:"WouterDeKort_Utopia" /o:"wouterdekort-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$(Sonar.Login)" /d:sonar.global.exclusions="wwwroot/lib/**" /d:sonar.branch.name="$(Build.SourceBranchName) /d:sonar.cs.opencover.reportsPaths="tests\ToDo.Tests\coverage.opencover.xml" /d:sonar.coverage.exclusions="**Tests*.cs""
  displayName: 'Begin Sonar Scan'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'
    
- task: whitesource.ws-bolt.bolt.wss.WhiteSource Bolt@18
  displayName: 'WhiteSource Bolt'
  inputs:
    cwd: src
    advance: true

- script: dotnet sonarscanner end /d:sonar.login="$(Sonar.Login)"
  displayName: 'End Sonar Scan'
     
- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: 'publish'
    projects: 'src/Todo.Web/ToDo.Web.csproj'
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: false

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: '$(build.artifactstagingdirectory)'
    artifact: drop